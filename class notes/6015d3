version control (source control) GIT

Git used to manage source code
  use this tool to communicate with service (GITHUB)stores it remotely

remote repo

working folder:
local machine - file1.txt, file2.txt
git init: creates local repo on local machine

local repository

staging area:
file which stores info about what will
when have working repo
can use git add to add files, the files go into staging area
git commit - file transferred from staging area to local repository
all on local machine

to restore deleted

: git reset - hard
- go to local repo where have file and get it back

every commit has a unique id
git log. - to see the ids of different commits

git1 clone git1 git1cloned - creates directory repo and moves files to it as well


synthesizer phase 1 before gui

branches is like creating a folder of current working directory
work1 - feature 1 for GUI interface
merge to master
git merge <branch>

git branch - shows brnaches and * which one we are in
git branch work
  creates work branch
    git checkout work
      moves us into work branch

git merge --squash work
  two branches time to do a merge

-f flag, ignore history push everything ignore different commits  FORCE push
-u flag , upstream is that particular repo name

git remote: setting remote repo
add name : git@github.com:user/repo - github hosting service
git push -f -u main
