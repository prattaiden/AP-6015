
software engineering principles

12 assignments
3 assigmnents not related to project

15% midterm
15% lab
5% quiz

midterm feb 29 2024
presentation april 23 2024

c++ refersh
std::cout for output
endl insterts new line and flushes buffer, 0 byte, \n just new line, one byte

std::cerr - chracter error, used to display errors found in source code
cout writes to buffer cerr doesnt write to buffer

std::string for strings

char * s - pointing to memory adress, that adress holds character

use == to compare std::string,
strcmp for char* - string compare
if keep char* pointer to character cant use ==

clang
command to create an executable
why? sometimes working on a server that doenst have interface, need to compile on the terminal

GNU
g++ , make , c++

LLVM
clang++ , clang

apple based on llvm technology
clang++ -- version
c++ --version

multi files

extern, function is in another file
put all declarations in a header file -- sum.h

c++ main.cpp sum.cpp -E
header file


building programs recall

source files executable
source files compiled into object files linker

c++ -c [source file] : generates object file
-o output_file : the binary file

tool to recompile files when they change
rerun required commands when their input files change
-MAKE-
make tool looks at the file and timestamp, if anything changes re compile

gmake

makeFIles
  files used by gmake to build programs

general structure:
  1. header:
    makefile builds cs 6015 project

  rules
  file1.o: file1.cpp file1.h file2.h file2.cpp
    c++ -c file1.cpp

  looks at timestamp
  if any of the timestamps change, then it is executed

pollEverywhere for class participation on THURSDAY

make all
  looks at first rule, prerequisite or dependencey program is another rule in the file

c++ &^ -o &@
c++ file1.cpp file2.cpp -o program

&& next command only executed if previous is successful

clean:
  rm -rf * .o

.PHONY: clean
run it anyways dont look at time timestamps

lab1:
Makefile


makefile caleb curry notes
file1.cpp -- file1.o
file2.cpp -- file2.o COMPILED C++ CODE object
those can be combined and hte header files
then get the output a.out

makefile can notice fil1.cpp is changed
so it can compile it

Makefile txt file
define what files are there and what dependenceys are

file1.o : file1.cpp - if file1.cpp changes, file1.o needs to be regenerated
  (tab, what happens to regenerate file1.o)c++ file.cpp
